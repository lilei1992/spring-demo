<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">


    <!-- ROOT -->
    <appender name="ROOT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/rootlog.txt</file>
        <append>true</append>
        <encoding>UTF-8</encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/rootlog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss}|${SERVER_IP}|${APP_NAME}|%thread|%-5level|%logger{50}|%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_ROOT" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold >0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="ROOT"/>
    </appender>



    <!-- INTERFACE Appender -->
    <appender name="INTERFACEAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/interfacelog.txt</file>
        <append>true</append>
        <encoding>UTF-8</encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/interfacelog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_INTERFACEAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="INTERFACEAppender"/>
    </appender>



    <!-- DB Appender -->
    <appender name="DBAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/dblog.txt</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/dblog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name ="ASYNC_DBAppender" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold >0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref ="DBAppender"/>
    </appender>

    <!-- CANAL Appender -->
        <appender name="CANALAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_HOME}/logs/canallog.txt</file>
            <append>true</append>
            <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                <fileNamePattern>${LOG_HOME}/logs/canallog.%i.txt
                </fileNamePattern>
                <minIndex>1</minIndex>
                <maxIndex>5</maxIndex>
            </rollingPolicy>
            <triggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                <maxFileSize>1GB</maxFileSize>
            </triggeringPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%msg%n</pattern>
                <charset class="java.nio.charset.Charset">UTF-8</charset>
            </encoder>
        </appender>
        <appender name ="ASYNC_CANALAppender" class= "ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold >0</discardingThreshold>
            <queueSize>512</queueSize>
            <appender-ref ref ="CANALAppender"/>
        </appender>



    <!-- MQ Appender -->
    <appender name="MQAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/mqlog.txt</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/mqlog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_MQAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="MQAppender"/>
    </appender>



    <!-- CACHE APPENDER -->
    <appender name="CACHEAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/cachelog.txt</file>
        <append>true</append>
        <encoding>UTF-8</encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/cachelog.%i.txt</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_CACHEAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="CACHEAppender"/>
    </appender>



    <!-- BIZ Appender -->
    <appender name="BIZAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/bizlog.txt</file>
        <append>true</append>
        <encoding>UTF-8</encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/bizlog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_BIZAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="BIZAppender"/>
    </appender>



    <!-- 3RD_SERVICE -->
    <appender name="3RD_ServiceAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/3rd_servicelog.txt</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/3rd_servicelog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name ="ASYNC_3RD_ServiceAppender" class= "ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold >0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref ="3RD_ServiceAppender"/>
    </appender>

    <!-- FRONT Appender -->
    <appender name="FRONTAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/frontlog.txt</file>
        <append>true</append>
        <encoding>UTF-8</encoding>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/frontlog.%i.txt
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>5</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>1GB</maxFileSize>
        </triggeringPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_FRONTAppender" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="FRONTAppender"/>
    </appender>


    <!-- INTERFACE -->
    <logger name="INTERFACE" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_INTERFACEAppender"/>
    </logger>

    <!-- DB -->
    <logger name="DB" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_DBAppender"/>
    </logger>

    <!-- CANAL -->
        <logger name="CANAL" additivity="false">
            <level value="INFO"/>
            <appender-ref ref="ASYNC_CANALAppender"/>
        </logger>

    <!-- MQ -->
    <logger name="MQ" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_MQAppender"/>
    </logger>

    <!-- CACHE -->
    <logger name="CACHE" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_CACHEAppender"/>
    </logger>

    <!-- BIZ -->
    <logger name="BIZ" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_BIZAppender"/>
    </logger>

    <!-- 3rd-service -->
    <logger name="3RD_SERVICE" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_3RD_ServiceAppender"/>
    </logger>
    <!-- FRONT -->
    <logger name="FRONT" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="ASYNC_FRONTAppender"/>
    </logger>
    <root>
        <level value="DEBUG"/>
        <appender-ref ref="ASYNC_ROOT"/>
    </root>
</configuration>